package com.acme.schedules.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import com.acme.schedules.model.Employee;
import com.acme.schedules.utils.Slicer;

public class EmployeeController {
	public static void compareEmployeeSchedules(Employee employee1, Employee employee2) {
		HashMap<String, ArrayList<String>> employee1Data = employee1.getWorkSchedule();
		HashMap<String, ArrayList<String>> employee2Data = employee2.getWorkSchedule();
		int totalHours = 0;
		int employee1InitialHourOnMinutes = 0;
		int employee1FinalHourOnMinutes = 0;
		int employee2InitialHourOnMinutes = 0;
		int employee2FinalHourOnMinutes = 0;
		for (Map.Entry<String, ArrayList<String>> entry1 : employee1Data.entrySet()) {
			String key = entry1.getKey();
			if (employee2Data.containsKey(key)) {
				ArrayList<String> value1 = entry1.getValue();
				employee1InitialHourOnMinutes = Slicer.getHourOnMinutes(value1.get(0));
				employee1FinalHourOnMinutes = Slicer.getHourOnMinutes(value1.get(1));
//				ArrayList<String> value2 = employee2Data.get(key);
				employee2InitialHourOnMinutes = Slicer.getHourOnMinutes(value1.get(0));
				employee2FinalHourOnMinutes = Slicer.getHourOnMinutes(value1.get(1));
				totalHours += getSharedMinutes(employee1InitialHourOnMinutes, employee1FinalHourOnMinutes,
						employee2InitialHourOnMinutes,employee2FinalHourOnMinutes);
			}
			System.out.println(employee1.getName() + " - " + employee2.getName() + " - " + totalHours);
		}
	}

	public static int getSharedMinutes(int initialMinutes, int finalMinutes, int initialMinutesToCompare, int finalMinutesToCompare) {
		int minuteShared = 0;
		if (initialMinutes<=initialMinutesToCompare && initialMinutesToCompare < finalMinutes) {
			minuteShared = finalMinutes - initialMinutesToCompare;
		}else if(initialMinutes<=finalMinutesToCompare && finalMinutesToCompare< finalMinutes) {
			minuteShared = finalMinutes - finalMinutesToCompare;
		}
		return minuteShared;
	}
}
